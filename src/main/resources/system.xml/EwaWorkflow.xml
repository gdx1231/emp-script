<?xml version="1.0" encoding="UTF-8"?>
<workflow>
	<sqls>
		<sql name="WF_DEPT" des="部门"
			Init="{id:'dep_Id',name:'dep_Name',pid:'dep_Pid'}"><![CDATA[
SELECT DEP_ID ID,DEP_NAME NAME FROM ADM_DEPT WHERE SUP_ID=@G_SUP_ID ORDER BY DEP_LVL,DEP_ORD
		]]></sql>

		<sql name="WF_POST" des="岗位"
			Init="{id:'DEP_POS_ID',name:'ID,DEP_POS_NAME',dep_id:'dep_Pid',master:'POS_IS_MASTER'}"><![CDATA[
SELECT a.*,b.POS_IS_MASTER FROM ADM_r_dept_post a
	inner join adm_post b on a.pos_id=b.pos_id 
WHERE dep_id in(select dep_id from adm_dept where SUP_ID=@g_sup_id)
		]]></sql>

		<sql name="WF_ADM" des="用户"
			Init="{id:'adm_id', name:'adm_name', dep_id:'dep_Id', pos_id:'dep_pos_id'}"><![CDATA[
SELECT adm_id, adm_name, dep_Id, dep_pos_id FROM V_ADM_USER_POST_DEPT
	WHERE SUP_ID=@G_SUP_ID order by adm_name
		]]></sql>

		<!-- 生成验证码，节点数量和编号未变化 + 连接数量和前后关系没变化 -->
		<sql name="WF_DLV_CODE_UNIT_ID" des="获取所有单元，按照id排序">
			SELECT A.WF_UNIT_ID FROM
			_EWA_WF_UNIT A
			INNER JOIN _EWA_WF B ON A.WF_ID=B.WF_ID
			AND WF_REF_ID =
			@REF_ID
			WHERE A.WF_ID = @WF_ID
			ORDER BY WF_UNIT_ID
		</sql>
		<!-- 生成验证码，节点数量和编号未变化 + 连接数量和前后关系没变化 -->
		<sql name="WF_DLV_CODE_FROM_TO" des="获取所有连接，按照form，to排序">
			SELECT WF_UNIT_FROM,
			WF_UNIT_TO FROM _EWA_WF_CNN A
			INNER JOIN _EWA_WF B ON A.WF_ID=B.WF_ID
			AND WF_REF_ID=@REF_ID
			WHERE A.WF_ID=@WF_ID ORDER BY WF_UNIT_FROM,
			WF_UNIT_TO
		</sql>

		<sql name="WF_UNIT">
			SELECT A.* FROM _EWA_WF_UNIT A
			INNER JOIN _EWA_WF B ON
			A.WF_ID=B.WF_ID
			AND WF_REF_ID=@REF_ID
			WHERE A.WF_ID = @WF_ID
			ORDER BY
			WF_UNIT_ID
		</sql>
		<sql name="WF_UNIT_CNN">
			SELECT A.* FROM _EWA_WF_CNN A
			INNER JOIN _EWA_WF B ON
			A.WF_ID=B.WF_ID AND WF_REF_ID=@REF_ID
			WHERE A.WF_ID = @WF_ID
			ORDER BY
			WF_UNIT_FROM, WF_UNIT_TO
		</sql>
		<sql name="WF_UNIT_ADM">
			SELECT * FROM _EWA_WF_UNIT_ADM WHERE WF_ID=@WF_ID AND
			WF_REF_ID=@REF_ID
		</sql>
		<sql name="WF_UNIT_LOGIC">
			SELECT * FROM _EWA_WF_UNIT_LOGIC WHERE WF_ID=@WF_ID AND
			WF_REF_ID=@REF_ID
		</sql>
		<sql name="WF_DLV_VER_CUR">
			SELECT DLV_VER FROM _EWA_WF_DLV WHERE WF_ID=@WF_ID AND
			WF_REF_ID=@REF_ID
			AND DLV_CODE=@DLV_CODE
		</sql>

		<sql name="WF_DLV_VER_MAX">
			select max(dlv_ver) from _EWA_WF_DLV WHERE WF_ID=@WF_ID
			AND
			WF_REF_ID=@REF_ID
		</sql>
		<sql name="WF_DLV_NEW">
			INSERT INTO _EWA_WF_DLV(WF_ID, WF_REF_ID, DLV_VER,
			DLV_JSON_UNIT, DLV_CUR,DLV_UNID,
			DLV_JSON_CNN, DLV_JSON_ADM,
			DLV_JSON_LOGIC, DLV_DATE, DLV_CODE
			) VALUES(
			@WF_ID, @REF_ID, @DLV_VER,
			@DLV_JSON_UNIT, 'Y',@SYS_UNID,
			@DLV_JSON_CNN, @DLV_JSON_ADM,
			@DLV_JSON_LOGIC, @SYS_DATE, @DLV_CODE)
		</sql>
		<sql name="WF_DLV_UPDATE">
			UPDATE _EWA_WF_DLV SET DLV_JSON_UNIT=@DLV_JSON_UNIT,
			DLV_JSON_CNN = @DLV_JSON_CNN,
			DLV_JSON_ADM = @DLV_JSON_ADM,
			DLV_JSON_LOGIC = @DLV_JSON_LOGIC,
			DLV_DATE = @SYS_DATE, DLV_CUR='Y'
			WHERE WF_ID=@WF_ID AND WF_REF_ID=@REF_ID AND DLV_CODE=@DLV_CODE
		</sql>
		<sql name="WF_DLV_NOT_CUR">
			UPDATE _EWA_WF_DLV SET DLV_CUR='N' WHERE DLV_VER !=
			@WF_DLV_VER
			AND WF_ID=@WF_ID AND WF_REF_ID=@REF_ID
		</sql>

		<sql name="WF_DLV_HIS_NEW" des="创建新历史数据">
<![CDATA[
INSERT INTO _EWA_WF_UNIT_HIS(WF_UNIT_ID, WF_ID, WF_REF_ID, WF_UNIT_NAME, WF_UNIT_MEMO) 
	SELECT WF_UNIT_ID, WF_ID, WF_REF_ID, WF_UNIT_NAME, WF_UNIT_MEMO FROM _EWA_WF_UNIT A
WHERE NOT EXISTS(  
	SELECT * FROM _EWA_WF_UNIT_his b where a.wf_id=b.wf_id
		and a.wf_unit_id=b.wf_unit_id
		 and a.wf_ref_id=b.wf_ref_id 
) AND A.WF_REF_ID=@REF_ID AND A.WF_ID=@WF_ID
]]></sql>
		<sql name="WF_DLV_HIS_UPDATE" des="创建新历史数据">
<![CDATA[
UPDATE _EWA_WF_UNIT_HIS INNER JOIN _EWA_WF_UNIT A 
 ON _EWA_WF_UNIT_HIS.WF_ID = A.WF_ID 
	AND _EWA_WF_UNIT_HIS.WF_UNIT_ID=A.WF_UNIT_ID  
	AND _EWA_WF_UNIT_HIS.WF_REF_ID=A.WF_REF_ID  
	AND _EWA_WF_UNIT_HIS.WF_ID = @WF_ID  
	AND _EWA_WF_UNIT_HIS.WF_REF_ID = @REF_ID  
SET _EWA_WF_UNIT_HIS.WF_UNIT_NAME=A.WF_UNIT_NAME, 
	_EWA_WF_UNIT_HIS.WF_UNIT_MEMO=A.WF_UNIT_MEMO 
]]></sql>
		<sql name="WF_DLV_HIS_UPDATE.SQLSERVER" des="创建新历史数据">
<![CDATA[
UPDATE _EWA_WF_UNIT_HIS SET  
		_EWA_WF_UNIT_HIS.WF_UNIT_NAME=A.WF_UNIT_NAME,  
		_EWA_WF_UNIT_HIS.WF_UNIT_MEMO=A.WF_UNIT_MEMO  
FROM _EWA_WF_UNIT A  
WHERE _EWA_WF_UNIT_HIS.WF_ID=A.WF_ID  
	AND _EWA_WF_UNIT_HIS.WF_UNIT_ID=A.WF_UNIT_ID  
	AND _EWA_WF_UNIT_HIS.WF_REF_ID=A.WF_REF_ID  
	AND _EWA_WF_UNIT_HIS.WF_ID = @WF_ID  
	AND _EWA_WF_UNIT_HIS.WF_REF_ID=@REF_ID
]]>
		</sql>
		<sql name="WF_DLV_UPDATE_FLOW" des="发布流程更新当前流程"><![CDATA[
UPDATE {dbname}SYS_STATUS INNER JOIN _EWA_WF_UNIT A  
	ON SYS_STA_TABLE = A.WF_ID 
		AND SYS_STA_VAL=A.WF_UNIT_ID 
		AND A.WF_REF_ID = @REF_ID
		AND SYS_STA_ID IN (
			SELECT SYS_STA_LAST_ID FROM {dbname}SYS_STATUS_IDX WHERE SYS_STA_TABLE=@WF_ID 
				AND IS_END IS NULL
				AND WF_DLV_VER=@WF_DLV_VER
				AND SUP_ID=@G_SUP_ID
		)
		AND SYS_STA_TABLE=@WF_ID
		AND A.WF_ID=@WF_ID
		AND SUP_ID=@G_SUP_ID
	SET 
	  ROLE_TYPE=A.WF_UNIT_ADM
	, ROLE_IDS=A.WF_UNIT_ADM_LST
	, SYS_STA_NAME=A.WF_UNIT_NAME
]]></sql>

		<sql Name="WF_DLV_UPDATE_FLOW.SQLSERVER" des="发布流程更新当前流程"><![CDATA[
UPDATE {dbname}SYS_STATUS SET ROLE_TYPE = A.WF_UNIT_ADM
	, ROLE_IDS=A.WF_UNIT_ADM_LST
	, SYS_STA_NAME=A.WF_UNIT_NAME
FROM _EWA_WF_UNIT A WHERE SYS_STA_TABLE = A.WF_ID 
		AND SYS_STA_VAL=A.WF_UNIT_ID 
		AND A.WF_REF_ID = @REF_ID
		AND SYS_STA_ID IN (
			SELECT SYS_STA_LAST_ID FROM {dbname}SYS_STATUS_IDX WHERE SYS_STA_TABLE=@WF_ID 
				AND IS_END IS NULL
				AND WF_DLV_VER=@WF_DLV_VER
				AND SUP_ID=@G_SUP_ID
		)
		AND SYS_STA_TABLE = @WF_ID
		AND A.WF_ID = @WF_ID 
		AND SUP_ID=@G_SUP_ID
]]></sql>
		<sql name="WF_ROLE" des="流程节点权限"><![CDATA[
SELECT A.*,E.WF_TAG_NAME, CASE 
	WHEN WF_UNIT_ADM='WF_ADM_ADM' THEN B.ADM_NAME
	WHEN WF_UNIT_ADM='WF_ADM_DEPT' THEN C.DEP_NAME
	WHEN WF_UNIT_ADM='WF_ADM_POST' THEN D.DEP_POS_NAME
	ELSE WF_TAG_NAME END NAME
FROM _EWA_WF_UNIT_ADM A 
	LEFT JOIN ADM_USER B ON A.WF_UNIT_ADM_ID=B.ADM_ID AND A.WF_UNIT_ADM='WF_ADM_ADM'
	LEFT JOIN ADM_DEPT C ON A.WF_UNIT_ADM_ID=C.DEP_ID AND A.WF_UNIT_ADM='WF_ADM_DEPT'
	LEFT JOIN ADM_R_DEPT_POST  D ON A.WF_UNIT_ADM_ID=D.DEP_POS_ID AND A.WF_UNIT_ADM='WF_ADM_POST'
	LEFT JOIN _EWA_WF_TAG E ON A.WF_UNIT_ADM=E.WF_TAG
WHERE WF_ID = @WF_ID		
	and WF_REF_ID = @ref_id
		]]></sql>

		<sql name="WF_LOG_NEW" des="日志记录"><![CDATA[
INSERT INTO SYS_STATUS(SYS_STA_RID, SYS_STA_TABLE, SYS_STA_TAG, ROLE_TYPE, ROLE_IDS ,
	SYS_STA_VAL, SYS_STA_CDATE, SYS_STA_MEMO, SUP_ID, ADM_ID, SYS_STA_NAME)
 VALUES(@SYS_STA_RID, @SYS_STA_TABLE, @SYS_STA_TAG, @WF_UNIT_ADM, @WF_UNIT_ADM_LST,
	@SYS_STA_VAL, @SYS_DATE, @SYS_STA_MEMO, @G_SUP_ID, @G_ADM_ID, @WF_UNIT_NAME)		
		]]></sql>

		<sql name="WF_LOG_IDX_CHECK" des="日志记录"><![CDATA[
SELECT 1 A FROM V_SYS_STATUS_IDX WHERE SYS_STA_TABLE=@SYS_STA_TABLE
	AND RID = @SYS_STA_RID
	AND SUP_ID = @G_SUP_ID		
		]]></sql>


		<sql name="WF_LOG_IDX_NEW" des="日志记录"><![CDATA[
INSERT INTO SYS_STATUS_IDX (  SUP_ID, ADM_ID, ADM_NAME, SYS_STA_TABLE, RID, RID1, RMSG)

[LOG_SQL]

;
]]></sql>
		
		
		<sql name="WF_LOG_IDX_UPDATE" des="日志记录"><![CDATA[
/* 节点的操作用户/部门/岗位列表 */
INSERT INTO SYS_STATUS_ADMS(SYS_STA_ID, ADM_TYPE, SELF_DEPT, ADM_ID)
SELECT @EWA_WF_LOG_ID, @WF_UNIT_ADM, @WF_UNIT_SELF_DEPT, col 
   FROM ewa_SPLIT(@WF_UNIT_ADM_LST,',') AAAAAA
WHERE NOT (@WF_UNIT_ADM_LST IS NULL OR @WF_UNIT_ADM_LST = '')
	AND NOT @WF_UNIT_ADM IS NULL
	AND @WF_UNIT_ADM !='null'
;

/*更新启动者, 最后一个节点，版本号,是否执行完毕*/
UPDATE SYS_STATUS_IDX SET START_ADM = (
	SELECT ADM_ID FROM SYS_STATUS WHERE SYS_STA_ID IN (
		SELECT MIN(SYS_STA_ID) A FROM SYS_STATUS
			 WHERE  SYS_STA_RID=@SYS_STA_RID AND SYS_STA_TABLE=@SYS_STA_TABLE AND SUP_ID=@G_SUP_ID
		)
	),
	SYS_STA_LAST_ID=(SELECT MAX(SYS_STA_ID) A FROM SYS_STATUS
			 WHERE  SYS_STA_RID=@SYS_STA_RID AND SYS_STA_TABLE=@SYS_STA_TABLE AND SUP_ID=@G_SUP_ID),
	WF_DLV_VER=@EWA_WF_DLV_VER ,
	IS_END = @EWA_WF_IS_END
WHERE RID=@SYS_STA_RID AND SYS_STA_TABLE=@SYS_STA_TABLE AND SUP_ID=@G_SUP_ID;		
		]]></sql>
		
		
		<sql name="WF_LOG_GET" des="获取日志记录"><![CDATA[
SELECT a.*, b.ADM_NAME, b.ADM_NAME_EN FROM V_SYS_STATUS A 
	LEFT JOIN ADM_USER B ON A.ADM_ID=B.ADM_ID
WHERE A.SYS_STA_RID=@SYS_STA_RID 
	AND A.SYS_STA_TABLE=@SYS_STA_TABLE 
	AND A.SUP_ID=@G_SUP_ID ORDER BY SYS_STA_ID		
]]></sql>

		<sql name="WF_LOG_VER_GET" des="获取当前流程版本号"><![CDATA[		
SELECT  a.WF_DLV_VER FROM V_SYS_STATUS_IDX A WHERE A.RID=@SYS_STA_RID 
	AND A.SYS_STA_TABLE=@SYS_STA_TABLE 
	AND A.SUP_ID=@G_SUP_ID
	]]></sql>

		<sql name="WF_APP_GET" des="客户获取流程应用"><![CDATA[
SELECT * FROM _EWA_WF_APP WHERE (APP_ITEMNAME = @ITEMNAME OR APP_ITEMNAME = @APP_ITEMNAME)		
		]]></sql>

		<sql name="WF_MY_GET" des="我的工作"><![CDATA[
SELECT DISTINCT A.SYS_STA_LAST_ID FROM SYS_STATUS_IDX A
	INNER JOIN SYS_STATUS B ON A.SYS_STA_LAST_ID = B.SYS_STA_ID 
		AND A.IS_END IS NULL 
		AND A.SUP_ID = @G_SUP_ID
 	INNER JOIN ADM_USER DEPT ON B.ADM_ID = DEPT.ADM_ID 	
	LEFT JOIN ADM_USER START_ADM ON A.START_ADM = START_ADM.ADM_ID 	
	LEFT JOIN ADM_DEPT_REL START_REL ON START_ADM.ADM_DEP_ID = START_REL.DEP_ID 
		AND RDEP_ID = @G_DEP_ID     
	LEFT JOIN V_ADM_USER_POST_DEPT DEPT1 ON DEPT.ADM_DEP_ID=DEPT1.DEP_ID
	    AND DEPT1.POS_IS_MASTER ='Y' 	
	    
	LEFT JOIN SYS_STATUS_ADMS K0 ON A.SYS_STA_LAST_ID = K0.SYS_STA_ID 
		AND K0.ADM_ID = @G_ADM_ID
		AND K0.ADM_TYPE = 'WF_ADM_ADM'
		AND (
			K0.SELF_DEPT='Y'
			AND START_REL.RDEP_ID &gt; 0 
			OR K0.SELF_DEPT IS NULL 
			OR K0.SELF_DEPT != 'Y' 
		)     
	LEFT JOIN SYS_STATUS_ADMS K1 ON A.SYS_STA_LAST_ID = K1.SYS_STA_ID 
		AND K1.ADM_ID = @G_DEP_ID 
		AND K1.ADM_TYPE ='WF_ADM_DEPT'
		AND (
			K1.SELF_DEPT = 'Y'
			AND START_REL.RDEP_ID &gt; 0 
			OR K1.SELF_DEPT IS NULL 
			OR K1.SELF_DEPT != 'Y' 
		)     
	LEFT JOIN SYS_STATUS_ADMS K2 ON A.SYS_STA_LAST_ID = K2.SYS_STA_ID 
		AND K2.ADM_ID = @G_POS_ID 
		AND K2.ADM_TYPE = 'WF_ADM_POST'
		AND (
			K2.SELF_DEPT='Y' 
			AND START_REL.RDEP_ID &gt; 0 
			OR K2.SELF_DEPT IS NULL 
			OR K2.SELF_DEPT != 'Y' 
		)    
WHERE K0.ADM_ID &gt; 0
	OR K1.ADM_ID &gt; 0
	OR K2.ADM_ID &gt; 0      
	OR (B.ROLE_TYPE = 'WF_ADM_MANAGER' AND DEPT1.ADM_ID = @G_ADM_ID)        
	OR (B.ROLE_TYPE = 'WF_ADM_START' AND A.START_ADM = @G_ADM_ID)		
		]]></sql>
	</sqls>
</workflow>